import{_ as i}from"./plugin-vue_export-helper-x3n3nnut.js";import{r,o as t,c as n,a as e,b as a,d as o,f as _}from"./app-YHd01f5L.js";const c={},s=e("h1",{id:"_01-02java基础-中",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_01-02java基础-中","aria-hidden":"true"},"#"),a(" 01-02Java基础（中）")],-1),d=e("h2",{id:"面向对象基础",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#面向对象基础","aria-hidden":"true"},"#"),a(" 面向对象基础")],-1),h={href:"https://javaguide.cn/",target:"_blank",rel:"noopener noreferrer"},u=_('<p>在我这里我只选择我自己想要记录的记录下来</p><h3 id="面向对象和面向过程的区别" tabindex="-1"><a class="header-anchor" href="#面向对象和面向过程的区别" aria-hidden="true">#</a> 面向对象和面向过程的区别？</h3><p>Java是一种面向对象的编程语言，与面向过程的编程方式有一些显著的区别。</p><ol><li>抽象级别不同： <ul><li>面向过程：关注解决问题的步骤和过程，将程序分解为一系列的函数或者过程。</li><li>面向对象：关注问题中的实体及其相互之间的交互关系，将程序设计为一组对象的集合。</li></ul></li><li>对象的思维方式： <ul><li>面向过程：以功能为中心，按照步骤执行任务。</li><li>面向对象：以对象为中心，通过对象之间的交互来完成任务。</li></ul></li><li>数据和方法的封装： <ul><li>面向过程：数据和方法是分开的，函数对数据进行操作。</li><li>面向对象：将数据和方法封装在对象中，对象对自身的数据和方法进行管理和操作。</li></ul></li><li>继承与多态性： <ul><li>面向过程：没有继承和多态的概念。</li><li>面向对象：通过继承和多态性实现代码的重用和灵活性。</li></ul></li><li>设计思想： <ul><li>面向过程：自顶向下、逐步求精的设计方式。</li><li>面向对象：自底向上、从整体到部分的设计方式。</li></ul></li></ol><p>总体来说，面向对象的编程更加强调代码的可重用性、可扩展性和可维护性，通过封装、继承和多态等特性来实现。而面向过程的编程更加关注解决问题的步骤和过程，以函数或者过程为中心进行编程。在实际开发中，根据具体的需求和项目规模选择合适的编程方式是很重要的</p>',5);function p(f,v){const l=r("ExternalLinkIcon");return t(),n("div",null,[s,d,e("p",null,[a("观看Javaguid学习笔记这是。具体请去看： "),e("a",h,[a("JavaGuide（Java面试+学习指南）"),o(l)])]),u])}const J=i(c,[["render",p],["__file","02-Java基础部分 (中).html.vue"]]);export{J as default};
