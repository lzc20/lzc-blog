const l=JSON.parse('{"key":"v-23770114","path":"/knowledge/01-Java/02-Java%E5%9F%BA%E7%A1%80%E9%83%A8%E5%88%86%20(%E4%B8%AD).html","title":"java基础(中)","lang":"zh-CN","frontmatter":{"order":2,"title":"java基础(中)"},"headers":[{"level":2,"title":"面向对象基础","slug":"面向对象基础","link":"#面向对象基础","children":[{"level":3,"title":"面向对象和面向过程的区别？","slug":"面向对象和面向过程的区别","link":"#面向对象和面向过程的区别","children":[]},{"level":3,"title":"创建一个对象用什么运算符?对象实体与对象引用有何不同?","slug":"创建一个对象用什么运算符-对象实体与对象引用有何不同","link":"#创建一个对象用什么运算符-对象实体与对象引用有何不同","children":[]},{"level":3,"title":"对象的相等和引用相等的区别","slug":"对象的相等和引用相等的区别","link":"#对象的相等和引用相等的区别","children":[]},{"level":3,"title":"如果一个类没有声明构造方法，该程序能正确执行吗?","slug":"如果一个类没有声明构造方法-该程序能正确执行吗","link":"#如果一个类没有声明构造方法-该程序能正确执行吗","children":[]},{"level":3,"title":"构造方法有哪些特点？是否可被 override?","slug":"构造方法有哪些特点-是否可被-override","link":"#构造方法有哪些特点-是否可被-override","children":[]},{"level":3,"title":"面向对象三大特征?","slug":"面向对象三大特征","link":"#面向对象三大特征","children":[]},{"level":3,"title":"接口和抽象类有什么共同点和区别？","slug":"接口和抽象类有什么共同点和区别","link":"#接口和抽象类有什么共同点和区别","children":[]},{"level":3,"title":"深拷贝和浅拷贝了解么？什么是引用拷贝》","slug":"深拷贝和浅拷贝了解么-什么是引用拷贝》","link":"#深拷贝和浅拷贝了解么-什么是引用拷贝》","children":[]}]},{"level":2,"title":"Object","slug":"object","link":"#object","children":[{"level":3,"title":"Object类常见的方法有哪些？","slug":"object类常见的方法有哪些","link":"#object类常见的方法有哪些","children":[]},{"level":3,"title":"==与equals()的区别","slug":"与equals-的区别","link":"#与equals-的区别","children":[]},{"level":3,"title":"HashCode()有什么用呢？","slug":"hashcode-有什么用呢","link":"#hashcode-有什么用呢","children":[]},{"level":3,"title":"为什么要有HashCode？","slug":"为什么要有hashcode","link":"#为什么要有hashcode","children":[]}]}],"git":{"createdTime":1705245265000,"updatedTime":1705412302000,"contributors":[{"name":"lwx1095775","email":"lzc525@qq.com","commits":2},{"name":"‘lwx1095775’","email":"‘lzc525@qq.com’","commits":1}]},"readingTime":{"minutes":8.35,"words":2505},"filePathRelative":"knowledge/01-Java/02-Java基础部分 (中).md","localizedDate":"2024年1月14日","excerpt":"<h1> 01-02Java基础（中）</h1>\\n<h2> 面向对象基础</h2>\\n<p>观看Javaguid学习笔记这是。具体请去看： <a href=\\"https://javaguide.cn/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">JavaGuide（Java面试+学习指南）</a></p>\\n<p>在我这里我只选择我自己想要记录的记录下来</p>\\n<h3> 面向对象和面向过程的区别？</h3>\\n<p>Java是一种面向对象的编程语言，与面向过程的编程方式有一些显著的区别。</p>\\n<ol>\\n<li>抽象级别不同：\\n<ul>\\n<li>面向过程：关注解决问题的步骤和过程，将程序分解为一系列的函数或者过程。</li>\\n<li>面向对象：关注问题中的实体及其相互之间的交互关系，将程序设计为一组对象的集合。</li>\\n</ul>\\n</li>\\n<li>对象的思维方式：\\n<ul>\\n<li>面向过程：以功能为中心，按照步骤执行任务。</li>\\n<li>面向对象：以对象为中心，通过对象之间的交互来完成任务。</li>\\n</ul>\\n</li>\\n<li>数据和方法的封装：\\n<ul>\\n<li>面向过程：数据和方法是分开的，函数对数据进行操作。</li>\\n<li>面向对象：将数据和方法封装在对象中，对象对自身的数据和方法进行管理和操作。</li>\\n</ul>\\n</li>\\n<li>继承与多态性：\\n<ul>\\n<li>面向过程：没有继承和多态的概念。</li>\\n<li>面向对象：通过继承和多态性实现代码的重用和灵活性。</li>\\n</ul>\\n</li>\\n<li>设计思想：\\n<ul>\\n<li>面向过程：自顶向下、逐步求精的设计方式。</li>\\n<li>面向对象：自底向上、从整体到部分的设计方式。</li>\\n</ul>\\n</li>\\n</ol>"}');export{l as data};
